name: Build and Deploy to DEV

on:
  push:
    branches:
      - dev
      - test
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      image_tag:  ${{ steps.export.outputs.image_tag }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set image tag based on branch name
        run: echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Export image tag for downstream jobs
        id: export
        run: |
          IMAGE_TAG=${{ github.ref_name }}
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Export secrets based on environment
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "APP_PORT=${{ secrets.APP_PORT_PROD }}" >> $GITHUB_ENV
            echo "REACT_APP_SSO_URL=${{ secrets.REACT_APP_SSO_URL_PROD }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_PREVIEW_URL=${{ secrets.REACT_APP_KILN_PREVIEW_URL_PROD }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_URL=${{ secrets.REACT_APP_KILN_URL_PROD }}" >> $GITHUB_ENV
            echo "REACT_APP_ENV=${{ secrets.REACT_APP_ENV_PROD }}" >> $GITHUB_ENV

          elif [[ "${GITHUB_REF##*/}" == "test" ]]; then
            echo "APP_PORT=${{ secrets.APP_PORT_TEST }}" >> $GITHUB_ENV
            echo "REACT_APP_SSO_URL=${{ secrets.REACT_APP_SSO_URL_TEST }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_PREVIEW_URL=${{ secrets.REACT_APP_KILN_PREVIEW_URL_TEST }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_URL=${{ secrets.REACT_APP_KILN_URL_TEST }}" >> $GITHUB_ENV
            echo "REACT_APP_ENV=${{ secrets.REACT_APP_ENV_TEST }}" >> $GITHUB_ENV

          else
            echo "APP_PORT=${{ secrets.APP_PORT_DEV }}" >> $GITHUB_ENV
            echo "REACT_APP_SSO_URL=${{ secrets.REACT_APP_SSO_URL_DEV }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_PREVIEW_URL=${{ secrets.REACT_APP_KILN_PREVIEW_URL_DEV }}" >> $GITHUB_ENV
            echo "REACT_APP_KILN_URL=${{ secrets.REACT_APP_KILN_URL_DEV }}" >> $GITHUB_ENV
            echo "REACT_APP_ENV=${{ secrets.REACT_APP_ENV_DEV }}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          no-cache: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.export.outputs.image_tag }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_PORT=${{ env.APP_PORT }}
            REACT_APP_SSO_URL=${{ env.REACT_APP_SSO_URL }}
            REACT_APP_KILN_PREVIEW_URL=${{ env.REACT_APP_KILN_PREVIEW_URL }}
            REACT_APP_KILN_URL=${{ env.REACT_APP_KILN_URL }}
            REACT_APP_ENV=${{ env.REACT_APP_ENV }}

  deploy_dev:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install oc CLI
        uses: redhat-actions/oc-installer@v1

      - name: Authenticate with OpenShift 
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          namespace: ${{ github.ref == 'refs/heads/main' && secrets.OPENSHIFT_PROD_NAMESPACE || (github.ref == 'refs/heads/dev' && secrets.OPENSHIFT_DEV_NAMESPACE) || secrets.OPENSHIFT_TEST_NAMESPACE }}
          openshift_token: ${{ github.ref == 'refs/heads/main' && secrets.OPENSHIFT_PROD_TOKEN || (github.ref == 'refs/heads/dev' && secrets.OPENSHIFT_DEV_TOKEN) || secrets.OPENSHIFT_TEST_TOKEN }}
          insecure_skip_tls_verify: true

      - name: Deploy with Helm
        run: |
          helm upgrade --install template-repository ./helm \
          --namespace ${{ github.ref == 'refs/heads/main' && secrets.OPENSHIFT_PROD_NAMESPACE || (github.ref == 'refs/heads/dev' && secrets.OPENSHIFT_DEV_NAMESPACE) || secrets.OPENSHIFT_TEST_NAMESPACE }} \
          --set app.image.repository=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
          --set app.image.tag=${{ needs.build_and_push.outputs.image_tag }} \
          --set postgresql.image.repository=postgres \
          --set postgresql.image.tag=12

      - name: Trigger OpenShift Rollout
        run: |
          oc rollout restart deployment/template-repository-app -n ${{ github.ref == 'refs/heads/main' && secrets.OPENSHIFT_PROD_NAMESPACE || (github.ref == 'refs/heads/dev' && secrets.OPENSHIFT_DEV_NAMESPACE) || secrets.OPENSHIFT_TEST_NAMESPACE }}
