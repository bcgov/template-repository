apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: {{ .Release.Name }}-postgresql
spec:
  replicas: 1
  serviceName: {{ .Release.Name }}-postgresql
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgresql
  securityContext:
    fsGroup: 1007250000 
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgresql
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          securityContext:
            runAsUser: 1007250000
          ports:
            - containerPort: {{ .Values.service.postgresPort }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{- toYaml .Values.postgresql.primary.persistence.accessModes | nindent 8  }}
        resources:
          requests:
            storage: {{ .Values.postgresql.primary.persistence.size }}
        storageClassName: {{ .Values.postgresql.primary.persistence.storageClassName | quote }}
